@model List<TimeProductivityTracking.web.Models.Productivity>

@{
    ViewData["Title"] = "Create";
}

<h4> Create Productivities </h4> 



<hr />


<form asp-action="Create">

    <div class="mb-3">
        <label for="SelectedMonth" class="form-label">Select a Month</label>
        <a class="dropdown-container">
         @Html.DropDownList("SelectedMonth", ViewBag.Months as List<SelectListItem>, "Please Select a Month",
                     new { @class = "form-control dropdown-custom monthly-input", required = "required" })


        </a> </div>




    <div class="form-group">
        <thead class="table-dark">
      <table class="table">
           <tr>
            <div class="form-group">
           <th>  <a> SEC Name</a> </th>
    </div>
    <div class="form-group">
        <th> <a>County </a> </th>
    </div>
    <th> <a>Planned Days </a> </th>
    <th> <a>Task Planned</a> </th>
    <th> <a>Mentor Planned</a> </th>
    <th> <a>Acheved Days </a> </th>
    <th> <a>Task Acheved</a> </th>
    <th> <a>Mentor Acheved</a> </th>
    <th></th>
    </tr>
    </thead>


    <tbody>


            @{
                int i = 0;
            }
            @foreach (var item in Model)
            {
            <tr>
                <th><input asp-for="@Model[i].SECName" value="@item.SECName" type="text" class="form-control sec-name-input" required title="@item.SECName" />  </th>
       @*
                <th class="dropdown-container">
                        @Html.DropDownListFor(Model => Model[i].County,
                                 new SelectList(Enum.GetValues(typeof(Counties))),
                                 "Select ..",
                                 new { @class = "form-control dropdown-custom", required = "required" })
                </th>
            *@
                <th> <input asp-for="@Model[i].County" value="@item.County" /> </th>
              
                <th> <input asp-for="@Model[i].PlannedDays" value="0.5" class="form-control short-input" required /> </th>
                <th class="dropdown-container"> 
                    @Html.DropDownListFor(Model => Model[i].Task_P, 
                        new SelectList(Enum.GetValues(typeof(Tasks))), 
                        "Select ..", 
                        new { @class = "form-control dropdown-custom", required = "required" }) </th>
               
                <th> <input asp-for="@Model[i].CountryMentor_P" value="@User.Identity.Name" class="form-control" required /> </th>
                <th> <input asp-for="@Model[i].AchevedDays" value="0.5" class="form-control short-input" required /> </th>

                <th class="dropdown-container">
                        @Html.DropDownListFor(Model => Model[i].Tasks_A,
                        new SelectList(Enum.GetValues(typeof(Tasks))), 
                        "Select ..", 
                        new { @class = "form-control dropdown-custom",  required = "required" }) 
                </th>

                <th> <input asp-for="@Model[i].CountryMentor_A" value="@User.Identity.Name" class="form-control" required /> </th>
             
            </tr>
                i++;
            }


    </tbody>

    </table>




    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>

</form>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}