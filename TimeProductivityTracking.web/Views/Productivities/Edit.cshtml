@model TimeProductivityTracking.web.Models.Productivity

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Productivities</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" id="productivityForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Monthly" class="control-label"></label>
                <input asp-for="Monthly" class="form-control" />
                <span asp-validation-for="Monthly" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SECName" class="control-label"></label>
                <input asp-for="SECName" class="form-control" />
                <span asp-validation-for="SECName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="County" class="control-label"></label>
                <input asp-for="County" class="form-control" />
                <span asp-validation-for="County" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlannedDays" class="control-label"></label>
                <input asp-for="PlannedDays" class="form-control" id="PlannedDays"/>
                <span asp-validation-for="PlannedDays" class="text-danger"></span>
            </div>
           

            <div class="form-group">
                <label asp-for="Task_P" class="control-label"></label>
                @Html.DropDownListFor(model => model.Task_P,
                         new SelectList(Enum.GetValues(typeof(Tasks))),
                         "Select ..",
                         new { @class = "form-control" })
                <span asp-validation-for="Task_P" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PlannedNextMonth" class="control-label"></label>
                <input asp-for="PlannedNextMonth" class="form-control" id="PlannedNextMonth" />
                <span asp-validation-for="PlannedNextMonth" class="text-danger"></span>
            </div>
          

            <div class="form-group">
                <label asp-for="Task_N" class="control-label"></label>
                @Html.DropDownListFor(model => model.Task_N,
                         new SelectList(Enum.GetValues(typeof(Tasks))),
                         "Select ..",
                         new { @class = "form-control" })
                <span asp-validation-for="Task_N" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CountryMentor_P" class="control-label"></label>
                <input asp-for="CountryMentor_P" class="form-control" />
                <span asp-validation-for="CountryMentor_P" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="AchevedDays" class="control-label"></label>
                <input asp-for="AchevedDays" class="form-control" id="AchevedDays" />
                <span asp-validation-for="AchevedDays" class="text-danger"></span>
            </div>
          
            <div class="form-group">
                <label asp-for="Tasks_A" class="control-label"></label>
                @Html.DropDownListFor(model => model.Tasks_A,
                         new SelectList(Enum.GetValues(typeof(Tasks))),
                         "Select ..",
                         new { @class = "form-control" })
                <span asp-validation-for="Tasks_A" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CountryMentor_A" class="control-label"></label>
                <input asp-for="CountryMentor_A" class="form-control" />
                <span asp-validation-for="CountryMentor_A" class="text-danger"></span>
            </div>
        
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } <script>
              document.getElementById("productivityForm").addEventListener("submit", function (e) {
                  const plannedNext = document.getElementById("PlannedNextMonth");
                  const plannedDays = document.getElementById("PlannedDays");
                  const achievedDays = document.getElementById("AchevedDays");

                  const fields = [
                      { input: plannedDays, label: "Planned This Month (Hours)" },
                      { input: plannedNext, label: "Planned Next Month (Hours)" },
                      { input: achievedDays, label: "Achieved This Month (Hours)" }
                  ];

                  for (let field of fields) {
                      if (field.input && parseFloat(field.input.value) < 0) {
                          e.preventDefault();
                          alert(field.label + " cannot be negative.");
                          field.input.focus();
                          return;
                      }
                  }
              });
    </script>
}