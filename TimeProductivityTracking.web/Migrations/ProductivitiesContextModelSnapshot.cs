// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeProductivityTracking.web.Data;

#nullable disable

namespace TimeProductivityTracking.web.Migrations
{
    [DbContext(typeof(ProductivitiesContext))]
    partial class ProductivitiesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeProductivityTracking.web.Models.SECContract", b =>
                {
                    b.Property<int>("SECContractID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryContract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SECName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SECContractID");

                    b.ToTable("SECContract", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
