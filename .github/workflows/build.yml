name: SonarQube

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner
     
      - name: Begin SonarQube Analysis
        working-directory: TimeProductivityTracking.web
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin `
            /k:"Wiphawan2024_TimeProductivityTracking" `
            /o:"wiphawan2024" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.cs.opencover.reportsPaths="TimeProductivityTracking.UnitTest/TestResults/**/coverage.opencover.xml"

      - name: Build solution
        working-directory: TimeProductivityTracking.web
        run: dotnet build --no-incremental

      - name: Run tests with coverage
        run: dotnet test TimeProductivityTracking.UnitTest/TimeProductivityTracking.UnitTest.csproj --no-build --collect:"XPlat Code Coverage"
        
      - name: Show test results and coverage path
        run: dir /s TimeProductivityTracking.UnitTest\TestResults
        
      - name: End SonarQube Analysis
        working-directory: TimeProductivityTracking.web
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
